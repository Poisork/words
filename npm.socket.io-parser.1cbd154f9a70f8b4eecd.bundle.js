(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{mbxr:function(t,r,e){"use strict";e.r(r),e.d(r,"protocol",(function(){return y})),e.d(r,"PacketType",(function(){return d})),e.d(r,"Encoder",(function(){return A})),e.d(r,"Decoder",(function(){return N}));var n=e("sAfb");const o="function"==typeof ArrayBuffer,s=Object.prototype.toString,c="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===s.call(Blob),i="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===s.call(File);function a(t){return o&&(t instanceof ArrayBuffer||(t=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer)(t))||c&&t instanceof Blob||i&&t instanceof File}function u(t,r){if(!t||"object"!=typeof t)return!1;if(Array.isArray(t)){for(let r=0,e=t.length;r<e;r++)if(u(t[r]))return!0;return!1}if(a(t))return!0;if(t.toJSON&&"function"==typeof t.toJSON&&1===arguments.length)return u(t.toJSON(),!0);for(const r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&u(t[r]))return!0;return!1}function f(t){const r=[],e=t.data,n=t;return n.data=h(e,r),n.attachments=r.length,{packet:n,buffers:r}}function h(t,r){if(!t)return t;if(a(t)){const e={_placeholder:!0,num:r.length};return r.push(t),e}if(Array.isArray(t)){const e=new Array(t.length);for(let n=0;n<t.length;n++)e[n]=h(t[n],r);return e}if("object"==typeof t&&!(t instanceof Date)){const e={};for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=h(t[n],r));return e}return t}function l(t,r){return t.data=p(t.data,r),t.attachments=void 0,t}function p(t,r){if(!t)return t;if(t&&!0===t._placeholder){if("number"==typeof t.num&&t.num>=0&&t.num<r.length)return r[t.num];throw new Error("illegal attachments")}if(Array.isArray(t))for(let e=0;e<t.length;e++)t[e]=p(t[e],r);else if("object"==typeof t)for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&(t[e]=p(t[e],r));return t}const y=5;var d;!function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"}(d||(d={}));class A{constructor(t){this.replacer=t}encode(t){return t.type!==d.EVENT&&t.type!==d.ACK||!u(t)?[this.encodeAsString(t)]:(t.type=t.type===d.EVENT?d.BINARY_EVENT:d.BINARY_ACK,this.encodeAsBinary(t))}encodeAsString(t){let r=""+t.type;return t.type!==d.BINARY_EVENT&&t.type!==d.BINARY_ACK||(r+=t.attachments+"-"),t.nsp&&"/"!==t.nsp&&(r+=t.nsp+","),null!=t.id&&(r+=t.id),null!=t.data&&(r+=JSON.stringify(t.data,this.replacer)),r}encodeAsBinary(t){const r=f(t),e=this.encodeAsString(r.packet),n=r.buffers;return n.unshift(e),n}}class N extends n.a{constructor(t){super(),this.reviver=t}add(t){let r;if("string"==typeof t){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");r=this.decodeString(t),r.type===d.BINARY_EVENT||r.type===d.BINARY_ACK?(this.reconstructor=new b(r),0===r.attachments&&super.emitReserved("decoded",r)):super.emitReserved("decoded",r)}else{if(!a(t)&&!t.base64)throw new Error("Unknown type: "+t);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");r=this.reconstructor.takeBinaryData(t),r&&(this.reconstructor=null,super.emitReserved("decoded",r))}}decodeString(t){let r=0;const e={type:Number(t.charAt(0))};if(void 0===d[e.type])throw new Error("unknown packet type "+e.type);if(e.type===d.BINARY_EVENT||e.type===d.BINARY_ACK){const n=r+1;for(;"-"!==t.charAt(++r)&&r!=t.length;);const o=t.substring(n,r);if(o!=Number(o)||"-"!==t.charAt(r))throw new Error("Illegal attachments");e.attachments=Number(o)}if("/"===t.charAt(r+1)){const n=r+1;for(;++r;){if(","===t.charAt(r))break;if(r===t.length)break}e.nsp=t.substring(n,r)}else e.nsp="/";const n=t.charAt(r+1);if(""!==n&&Number(n)==n){const n=r+1;for(;++r;){const e=t.charAt(r);if(null==e||Number(e)!=e){--r;break}if(r===t.length)break}e.id=Number(t.substring(n,r+1))}if(t.charAt(++r)){const n=this.tryParse(t.substr(r));if(!N.isPayloadValid(e.type,n))throw new Error("invalid payload");e.data=n}return e}tryParse(t){try{return JSON.parse(t,this.reviver)}catch(t){return!1}}static isPayloadValid(t,r){switch(t){case d.CONNECT:return"object"==typeof r;case d.DISCONNECT:return void 0===r;case d.CONNECT_ERROR:return"string"==typeof r||"object"==typeof r;case d.EVENT:case d.BINARY_EVENT:return Array.isArray(r)&&r.length>0;case d.ACK:case d.BINARY_ACK:return Array.isArray(r)}}destroy(){this.reconstructor&&this.reconstructor.finishedReconstruction()}}class b{constructor(t){this.packet=t,this.buffers=[],this.reconPack=t}takeBinaryData(t){if(this.buffers.push(t),this.buffers.length===this.reconPack.attachments){const t=l(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}}}]);